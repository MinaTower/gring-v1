CREATE TABLE Users (
    id SERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(20) UNIQUE NOT NULL,
    password TEXT NOT NULL,
    history JSONB DEFAULT '[]',
    regTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Flights (
    id SERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL,
    flightNumber VARCHAR(50) UNIQUE NOT NULL,
    airline VARCHAR(255) NOT NULL,
    route JSONB NOT NULL,
    departureTime TIMESTAMP NOT NULL,
    arrivalTime TIMESTAMP[] NOT NULL,
    duration INT NOT NULL,
    availableSeats INT NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    status VARCHAR(50) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE Bookings (
    id SERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL,
    userId INT NOT NULL,
    flightId INT NOT NULL,
    passengerInfo JSONB NOT NULL,
    selectedSeats JSONB NOT NULL,
    totalPrice DECIMAL(10,2) NOT NULL,
    paymentStatus VARCHAR(50) NOT NULL,
    bookingStatus VARCHAR(50) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES Users(id) ON DELETE CASCADE,
    FOREIGN KEY (flightId) REFERENCES Flights(id) ON DELETE CASCADE
);

CREATE TABLE Payments (
    id SERIAL PRIMARY KEY,
    bookingId INT NOT NULL,
    userId INT NOT NULL,
    paymentMethod VARCHAR(50) NOT NULL,
    transactionId VARCHAR(255) UNIQUE NOT NULL,
    totalPrice DECIMAL(10,2) NOT NULL,
    currency VARCHAR(10) NOT NULL,
    paymentStatus VARCHAR(50) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (bookingId) REFERENCES Bookings(id) ON DELETE CASCADE,
    FOREIGN KEY (userId) REFERENCES Users(id) ON DELETE CASCADE
);

CREATE TABLE BookingReports (
    id SERIAL PRIMARY KEY,
    generatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    reportData JSONB NOT NULL,
    bookingId INT NOT NULL,
    FOREIGN KEY (bookingId) REFERENCES Bookings(id) ON DELETE CASCADE
);
