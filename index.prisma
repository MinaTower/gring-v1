model User {
    id       Int      @id @default(autoincrement())
    uuid     String   @unique
    name     String
    email    String   @unique
    phone    String
    password String
    history  Json
    regTime  DateTime @default(now())

    bookings Booking[]
    payments Payment[]
}

model Flight {
    id             Int      @id @default(autoincrement())
    uuid           String   @unique
    flightNumber   String
    airline        String
    route          Json
    departureTime  DateTime
    arrivalTime    Json
    duration       Float
    availableSeats Int
    price          Float
    status         String
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt

    bookings Booking[]
}

model Booking {
    id            Int      @id @default(autoincrement())
    uuid          String   @unique
    userId        Int
    flightId      Int
    passengerInfo Json
    selectedSeats Json
    totalPrice    Float
    paymentStatus String
    bookingStatus String
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    user          User           @relation(fields: [userId], references: [id])
    flight        Flight         @relation(fields: [flightId], references: [id])
    payment       Payment?
    bookingReport BookingReport?
}

model Payment {
    id            Int      @id @default(autoincrement())
    bookingId     Int      @unique
    userId        Int
    paymentMethod String
    transactionId String   @unique
    totalPrice    Float
    currency      String
    paymentStatus String
    createdAt     DateTime @default(now())

    booking Booking @relation(fields: [bookingId], references: [id])
    user    User    @relation(fields: [userId], references: [id])
}

model BookingReport {
    id          Int      @id @default(autoincrement())
    generatedAt DateTime @default(now())
    reportData  Json
    bookingId   Int      @unique

    booking Booking @relation(fields: [bookingId], references: [id])
}
